@{ 
    string color_mode = "dark";
    
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="~/Content/css/_Layout.css">
    <link rel="stylesheet" href="~/Content/">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link rel='stylesheet' href='https://fonts.googleapis.com/icon?family=Material+Icons'>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <title>Local File Service</title>

    <style>
        .modal-backdrop {
            width: 100%;
        }

        .modal-body {
            box-sizing: border-box;
        }

        .ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .upload-file-list {
            width: 100%;
            overflow: hidden;
        }

        .uploadfile-tbody {
            overflow: hidden;
        }

        th {
            overflow: hidden;

        }

        td {
            overflow: hidden;
        }

        #fileList li {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 5px;
            border-bottom: 1px solid #ddd;
        }

    </style>
</head>
<body id="body-pd" class="bg-dark">
    <header class="header" id="header">
        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        @*<form class="d-flex">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>*@
    </header>
    <div class="l-navbar bg-black" id="nav-bar">
        <nav class="nav">
            <div>
                <a href="#" class="nav_logo">
                    <i class='bx bx-layer nav_logo-icon'></i>
                    <span class="nav_logo-name">BBBootstrap</span>
                </a>
                <div class="nav_list">
                    <a href="#" class="nav_link active">
                        <i class='bx bx-grid-alt nav_icon'></i>
                        <span class="nav_name">Dashboard</span>
                    </a>
                    <a href="#" class="nav_link">
                        <i class='bx bx-user nav_icon'></i>
                        <span class="nav_name">Users</span>
                    </a>
                    <a href="#" class="nav_link">
                        <i class='bx bx-message-square-detail nav_icon'></i>
                        <span class="nav_name">Messages</span>
                    </a>
                    <a href="#" class="nav_link">
                        <i class='bx bx-bookmark nav_icon'></i>
                        <span class="nav_name">Bookmark</span>
                    </a>
                    <a href="#" class="nav_link">
                        <i class='bx bx-folder nav_icon'></i>
                        <span class="nav_name">Files</span>
                    </a>
                    <a href="#" class="nav_link">
                        <i class='bx bx-bar-chart-alt-2 nav_icon'></i>
                        <span class="nav_name">Stats</span>
                    </a>
                </div>
            </div>
            <a href="#" class="nav_link">
                <i class='bx bx-log-out nav_icon'></i>
                <span class="nav_name">SignOut</span>
            </a>
        </nav>
    </div>
    <div class="bg-dark pt-3">
        @RenderBody()
    </div>

    @*floating add button*@
    <div class="fab-container">
        <div class="fab shadow">
            <div class="fab-content">
                <span class="material-icons">list</span>
            </div>
        </div>
        <div class="sub-button shadow">
            <a href="google.com" target="_blank">
                <span class="material-icons">folder</span>
            </a>
        </div>
        <div class="sub-button shadow">
            <button type="button" class="btn btn-primary rounded" data-toggle="modal" data-target="#exampleModal">
                <span class="material-icons">upload</span>
            </button>
        </div>
    </div>

    @*floating upload file modal*@
    <div class="modal fade w-100" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Upload File</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="dropZone" style="border: 2px dashed #007bff; padding: 20px; text-align: center; cursor: pointer;">
                        <p class="m-0">Drag Files Here or Click To Select Files</p>
                        <input type="file" id="fileInput" multiple style="display: none;" />
                    </div>
                    <br />
                    <div>
                        <button id="uploadButton" class="btn btn-primary">Upload</button>
                    </div>
                    <br />
                        <div id="fileList"></div>
                    </div>
                
            </div>
        </div>
    </div>


    <script>
        // Kéo thả
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');
        let filesToUpload = [];

        dropZone.addEventListener('click', () => fileInput.click());

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.style.borderColor = "#00b300";
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.style.borderColor = "#007bff";
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.style.borderColor = "#007bff";

            const files = Array.from(e.dataTransfer.files);
            handleFiles(files);
        });

        fileInput.addEventListener('change', (e) => {
            const files = Array.from(e.target.files);
            handleFiles(files);
        });

        function handleFiles(files) {
            files.forEach((file) => {
                if (filesToUpload.some(f => f.name === file.name)) {
                    alert(`File ${file.name} is already added.`);
                    return;
                }

                filesToUpload.push(file);
                const listItem = document.createElement('li');
                listItem.textContent = file.name;
                listItem.classList.add('ellipsis');
                fileList.appendChild(listItem);
            });
        }


        // Upload Files
        document.getElementById('uploadButton').addEventListener('click', () => {
            const formData = new FormData();
            filesToUpload.forEach(file => {
                formData.append('files', file);
            });

            fetch('/Home/UploadFiles', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) throw new Error("Upload failed");
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('Upload successful!');
                        fileList.innerHTML = ''; // Xóa danh sách file sau khi upload thành công
                        filesToUpload = [];
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Upload failed! Please try again.');
                });

        });
    </script>

    <script>

        document.addEventListener("DOMContentLoaded", function (event) {

            const showNavbar = (toggleId, navId, bodyId, headerId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId),
                    bodypd = document.getElementById(bodyId),
                    headerpd = document.getElementById(headerId)

                // Validate that all variables exist
                if (toggle && nav && bodypd && headerpd) {
                    toggle.addEventListener('click', () => {
                        // show navbar
                        nav.classList.toggle('show')
                        // change icon
                        toggle.classList.toggle('bx-x')
                        // add padding to body
                        bodypd.classList.toggle('body-pd')
                        // add padding to header
                        headerpd.classList.toggle('body-pd')
                    })
                }
            }

            showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header')

            /*===== LINK ACTIVE =====*/
            const linkColor = document.querySelectorAll('.nav_link')

            function colorLink() {
                if (linkColor) {
                    linkColor.forEach(l => l.classList.remove('active'))
                    this.classList.add('active')
                }
            }
            linkColor.forEach(l => l.addEventListener('click', colorLink))

            // Your code to run since DOM is loaded and ready
        });
    </script>
</body>
</html>
